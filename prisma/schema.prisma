generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("db_PRISMA_URL")
  directUrl = env("db_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id    String     @id @default(cuid())
  email String  @unique
  name  String  @unique
  password String?
  phone String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id        String     @id @default(cuid())
  name     String
  organization   String
  date        DateTime

}

model Store {
  id       String   @id @default(cuid())
  name     String
  adress   String
  phone     String
}

model tickets {
  id Int @id @default(autoincrement())
  number Int
}
